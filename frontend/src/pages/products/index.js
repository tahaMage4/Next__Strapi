import { gql } from "@apollo/client";
import Button from "@components/Button";
import Container from "@components/Container";
import { getApolloClient } from "@lib/aplloClient";
import Head from "next/head";
import React from "react";
import styles from "@styles/Page.module.scss";
import Link from "next/link";
import ProductData from "@components/Products";

const Products = ({ Products, AddToCart }) => {
  console.log(Products);
  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Container>
        <h1>All Products</h1>

        {/* <ul className={styles.products}>
          {Products.map((product, key) => {
            return (
              <li key={key}>
                <Link href={`/products/${product.attributes.Slug}`}>
                  <a> */}
        {/* <div className={styles.productImage}> */}
        {/* {Object.values.product.attributes.Image.data.attributes.map(
                        (image) => {
                          return (
                            <img
                              width={image.width}
                              // height={product.attributes.Image.height}
                              // src={product.attributes.Image.url}
                              alt="Images"
                            />
                          );
                        }
                      )} */}
        {/* <img
                        // width={image.width}
                        // height={product.attributes.Image.height}
                        // src={product.attributes.Image.url}
                        src={
                          product.attributes.Image.data &&
                          product.attributes.Image.data.attributes.url
                        }
                        alt="Images"
                      /> */}
        {/* </div>
                    <h3 className={styles.productTitle}>
                      {product.attributes.Name}
                    </h3>
                    <p className={styles.productPrice}>
                      ${product.attributes.Price}
                    </p>
                    <span>{product.attributes.category}</span>
                    <br />
                    <button>{product.attributes.colors}</button>
                    <p>Size : {product.attributes.Size}</p>
                  </a>
                </Link>
                <p> */}
        {/* <Button
                    className="snipcart-add-item"
                    data-item-id={product.attributes.id}
                    data-item-price={product.attributes.Price}
                    data-item-url={`/products/${product.attributes.Slug}`}
                    data-item-image={product.attributes.Image.url}
                    data-item-name={product.attributes.Name}
                  >
                    Add to Cart
                  </Button> */}
        {/* <Button
                    onClick={() => {
                      AddToCart(
                        product.attributes.Slug,
                        1,
                        product.attributes.Price
                      );
                    }}
                  >
                    Add to Cart
                  </Button>
                </p>
              </li>
            );
          })}
        </ul> */}

        <ProductData Products={Products} AddToCart={AddToCart} />
      </Container>
    </>
  );
};

export default Products;

export async function getStaticProps() {
  const client = getApolloClient();
  const data = await client.query({
    query: gql`
      query ProductsPage {
        products {
          data {
            attributes {
              Name
              Price
              Description
              Slug
              category
              colors
              Size
              Image {
                data {
                  id
                  attributes {
                    url
                    width
                    height
                    name
                  }
                }
              }
            }
          }
        }
      }
    `,
  });
  const Products = data.data.products.data;
  return {
    props: {
      Products,
    },
  };
}
